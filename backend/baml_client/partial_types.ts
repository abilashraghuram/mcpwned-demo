/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
import type { Image, Audio } from "@boundaryml/baml"
import type { Checked, Check } from "./types.js"
import type {  ObtainRulesInput,  PlaygroundDiagramMock,  PlaygroundDiagramMockList,  PlaygroundEdge,  PlaygroundEdgeStyle,  PlaygroundNode,  PlaygroundNodeData,  PlaygroundPosition,  PlaygroundToolsInput,  Resume,  Rule,  RuleInput,  RuleList } from "./types.js"
import type * as types from "./types.js"

/******************************************************************************
*
*  These types are used for streaming, for when an instance of a type
*  is still being built up and any of its fields is not yet fully available.
*
******************************************************************************/

export interface StreamState<T> {
    value: T
    state: "Pending" | "Incomplete" | "Complete"
}

export namespace partial_types {
    
    export interface ObtainRulesInput {
        github_readme?: (string | null)
    }
    
    export interface PlaygroundDiagramMock {
        nodes?: (partial_types.PlaygroundNode | null)[]
        edges?: (partial_types.PlaygroundEdge | null)[]
        guardrails?: (string | null)[]
        mcpTools?: (string | null)[]
        scan_description?: (string | null)
    }
    
    export interface PlaygroundDiagramMockList {
        diagrams?: (partial_types.PlaygroundDiagramMock | null)[]
    }
    
    export interface PlaygroundEdge {
        id?: (string | null)
        source?: (string | null)
        target?: (string | null)
        animated: true
        style?: (partial_types.PlaygroundEdgeStyle | null)
    }
    
    export interface PlaygroundEdgeStyle {
        stroke?: (string | null)
        strokeWidth?: (number | null)
    }
    
    export interface PlaygroundNode {
        id?: (string | null)
        type?: (string | null)
        position?: (partial_types.PlaygroundPosition | null)
        data?: (partial_types.PlaygroundNodeData | null)
    }
    
    export interface PlaygroundNodeData {
        label?: (string | null)
        color?: (string | null)
    }
    
    export interface PlaygroundPosition {
        x?: (number | null)
        y?: (number | null)
    }
    
    export interface PlaygroundToolsInput {
        tools?: (string | null)[]
    }
    
    export interface Resume {
        name?: (string | null)
        email?: (string | null)
        experience?: (string | null)[]
        skills?: (string | null)[]
    }
    
    export interface Rule {
        nodes?: (partial_types.PlaygroundNode | null)[]
        edges?: (partial_types.PlaygroundEdge | null)[]
        guardrail_justification?: (string | null)[]
        guardrail_code?: (string | null)[]
        ruleJustification?: (string | null)
        scan_description?: (string | null)
    }
    
    export interface RuleInput {
        tools?: (string | null)[]
        user_exploit_summary?: (string | null)
    }
    
    export interface RuleList {
        diagrams?: (partial_types.Rule | null)[]
    }
    
}